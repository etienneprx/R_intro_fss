{
  "hash": "1bc1b6b4da47323be04728f76fab03c9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Initiation à l'analyse des données avec R\"\nsubtitle: \"Formation théorique | 9h à 12h\"\nauthor: \"Étienne Proulx\"\ndate: today\ndate-format: \"D MMMM YYYY\"\nlang: fr\nformat:\n  revealjs:\n    theme: simple\n    logo: https://upload.wikimedia.org/wikipedia/en/thumb/9/90/Ulaval_Shield.svg/800px-Ulaval_Shield.svg.png\n    footer: \"[Faculté des sciences sociales](https://www.fss.ulaval.ca)\"\n    transition: slide\n    transition-speed: fast\n    code-fold: false\n    code-overflow: wrap\n    code-copy: true\n    incremental: false\n    slide-number: true\n    show-slide-number: all\n\nexecute:\n  echo: true\n  eval: true\n  warning: false\n  message: false\n---\n\n\n\n\n\n\n## Objectifs de l'atelier {.smaller}\n\n- Introduire R pour l'analyse de données\n  - Interface RStudio et console\n  - Les objets et types de données\n  - Les fonctions et packages\n  - Import et manipulation de données\n  - Analyse descriptive et graphiques\n\n> Le but est que vous puissiez sortir d'ici avec une compréhension de base de R et que vous soyez capable d'aller chercher des ressources pour continuer à apprendre.\n\n---\n\n## Qu'est-ce que R ? {.smaller}\n\n::: {.columns}\n::: {.column width=\"50%\"}\n**R c'est :**\n\n- Un langage de programmation pour l'analyse de données\n- Gratuit et open-source\n- Une communauté active mondiale\n- Plus de 21,000 packages spécialisés\n\n:::\n\n::: {.column width=\"50%\"}\n**Pourquoi l'utiliser ?**\n\n- Adapté aux sciences sociales\n- Analyses reproductibles et transparentes\n- Visualisations de qualité professionnelle\n- Compétence recherchée en recherche et industrie\n\n:::\n:::\n\n<br>\n\n> Aujourd'hui nous allons apprendre les bases pour analyser de vraies données\n\n---\n\n## Pourquoi R en sciences sociales ? {.smaller background-color=\"#2C5F77\"}\n\n![](https://upload.wikimedia.org/wikipedia/commons/thumb/1/1b/R_logo.svg/1024px-R_logo.svg.png){.absolute top=0 left=900 width=\"20%\"}\n\n::: {style=\"color: white;\"}\n\n**R est utilisé dans la vraie vie :**\n\n::: {.columns}\n::: {.column width=\"50%\"}\n**Organisations :**\n\n- [AirBnB](https://medium.com/airbnb-engineering/using-r-packages-and-education-to-scale-data-science-at-airbnb-906faa58e12d) - analyse de données\n- [BBC](https://bbc.github.io/rcookbook/) - graphiques journalistiques\n- Google, Facebook, Amazon - data science\n\n:::\n\n::: {.column width=\"50%\"}\n**Recherche au Québec :**\n\n- [Vox Pop Labs](https://github.com/voxpoplabs) (Boussole électorale)\n- CLESSN (Université Laval)\n- Nombreux chercheurs en sciences sociales\n\n:::\n:::\n:::\n\n---\n\n## Visualisations avancées avec R {.smaller background-color=\"#4A90A4\"}\n\n::: {style=\"color: white;\"}\n\n**Suivi quotidien des intentions de vote - Élections fédérales 2025**\n\n:::\n\n![](https://github.com/clessn/agregateur_data/blob/main/img/daily_gif_fr.gif?raw=true){fig-align=\"center\" width=\"80%\"}\n\n::: {.callout-note}\nAnimation générée automatiquement chaque jour avec R - Centre d'analyse des politiques publiques\n:::\n\n---\n\n## Au-delà des chiffres {.smaller background-color=\"#2C5F77\"}\n\n::: {style=\"color: white;\"}\n\n**R s'adapte à tous types de données**\n\n::: {.columns}\n::: {.column width=\"50%\"}\n**Texte :**\n\n- Analyse de sentiment\n- Classification de documents\n- Transcription audio\n- Extraction d'informations\n\n:::\n\n::: {.column width=\"50%\"}\n**Multimédia :**\n\n- Analyse d'images\n- Création de vidéos\n- Infographies automatisées\n- Présentations interactives\n\n:::\n:::\n:::\n\n---\n\n## Applications web interactives avec Shiny {.smaller background-color=\"#4A90A4\"}\n\n::: {style=\"color: white;\"}\n\n**Explorez vos données de manière interactive**\n\n:::\n\n[![](images/shiny.png){width=\"80%\"}](https://nz-stefan.shinyapps.io/commute-explorer-2/)\n\n::: {.callout-tip}\nCliquez sur l'image pour voir l'[application en action](https://nz-stefan.shinyapps.io/commute-explorer-2/)\n:::\n\n---\n\n## Applications Shiny : possibilités infinies {.smaller background-color=\"#5B4E77\"}\n\n::: {style=\"color: white;\"}\n\n**Transformez vos analyses en outils accessibles**\n**Exemples d'utilisation :**\n\n- Tableaux de bord de suivi\n- Explorateurs de données interactifs\n- Outils de collecte de données\n- Simulateurs et calculateurs\n- Rapports personnalisés\n\n::: {.callout-note}\nAucune connaissance en développement web nécessaire\n:::\n:::\n\n---\n\n## Et après R ? {.smaller background-color=\"#2C5F77\"}\n\n::: {style=\"color: white;\"}\n\n**Apprendre R ouvre la porte à d'autres langages**\n\nLes concepts appris en R se transfèrent facilement :\n\n::: {.columns}\n::: {.column width=\"50%\"}\n**Analyse de données :**\n\n- Python (data science)\n- Julia (calcul scientifique)\n- SQL (bases de données)\n\n:::\n\n::: {.column width=\"50%\"}\n**Développement :**\n\n- JavaScript (web interactif)\n- HTML/CSS (présentation)\n- Bash (automatisation)\n\n:::\n:::\n\n::: {.callout-note}\nUne fois qu'on maîtrise un langage de programmation, les autres deviennent beaucoup plus faciles à apprendre\n:::\n:::\n\n---\n\n## Installer R et RStudio {.smaller}\n\n::: {.columns}\n::: {.column width=\"50%\"}\n**Quelle est la différence ?**\n\n- R est le moteur, RStudio est le véhicule\n- R est le langage, RStudio est la feuille de papier\n- RStudio facilite l'utilisation de R\n- RStudio est un IDE (Integrated Development Environment)\n- Personnalisation de l'environnement de travail\n:::\n\n::: {.column width=\"50%\"}\n**Liens de téléchargement :**\n\n- [Installer R](https://cran.r-project.org/)\n- [Installer RStudio](https://www.rstudio.com/products/rstudio/download/)\n:::\n:::\n\n---\n\n## Avant de commencer à coder : RStudio {.smaller}\n\n![](images/rstudio.png){.absolute top=\"100\" left=\"0\" width=\"100%\" height=\"80%\"}\n\n::: {.absolute top=\"250\" left=\"80\" style=\"background-color: rgba(255,255,255,0.9); padding: 15px; border-radius: 10px; max-width: 280px;\"}\n**Script**  \nOù on écrit notre code\n:::\n\n::: {.absolute top=\"200\" left=\"600\" style=\"background-color: rgba(255,255,255,0.9); padding: 15px; border-radius: 10px; max-width: 280px;\"}\n**Environment**  \nNos objets et données\n:::\n\n::: {.absolute top=\"500\" left=\"80\" style=\"background-color: rgba(255,255,255,0.9); padding: 15px; border-radius: 10px; max-width: 280px;\"}\n**Console**  \nOù s'exécutent les commandes\n:::\n\n::: {.absolute top=\"450\" left=\"600\" style=\"background-color: rgba(255,255,255,0.9); padding: 15px; border-radius: 10px; max-width: 280px;\"}\n**Files/Plots**  \nFichiers et graphiques\n:::\n\n---\n\n## R comme calculatrice {.smaller}\n\n::: {.callout-tip}\n## À tester dans la console\n:::\n\n\n\n\n::: {.cell code-copy='true'}\n\n```{.r .cell-code}\n# Opérations de base\n2 + 3\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5\n```\n\n\n:::\n\n```{.r .cell-code}\n10 * 5\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 50\n```\n\n\n:::\n\n```{.r .cell-code}\n15 / 3\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5\n```\n\n\n:::\n\n```{.r .cell-code}\nsqrt(16)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4\n```\n\n\n:::\n:::\n\n\n\n\n::: {.fragment}\n\n\n\n::: {.cell code-copy='true'}\n\n```{.r .cell-code}\n# Un peu plus complexe\n(10 + 5) * 2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 30\n```\n\n\n:::\n\n```{.r .cell-code}\n2^3  # puissance\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 8\n```\n\n\n:::\n:::\n\n\n\n:::\n\n\n---\n\n## Créer nos premiers objets {.smaller}\n\nEn R, on sauvegarde tout dans des **objets** avec `<-`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Créer des objets simples\nfilm_prefere <- \"Dune\"\nannee_sortie <- 2021\nnote_imdb <- 8.0\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Voir le contenu des objets\nfilm_prefere\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Dune\"\n```\n\n\n:::\n\n```{.r .cell-code}\nannee_sortie\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2021\n```\n\n\n:::\n\n```{.r .cell-code}\nnote_imdb\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 8\n```\n\n\n:::\n:::\n\n\n\n\n::: {.callout-note}\n**Important :** Les objets apparaissent dans le panneau Environment de RStudio !\n:::\n\n---\n\n## Les vecteurs : groupes de valeurs\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Créer des vecteurs avec la fonction c()\nfilms <- c(\"Dune\", \"Oppenheimer\", \"Barbie\", \"The Zone of Interest\", \"Killers of the Flower Moon\")\nannees <- c(2021, 2023, 2023, 2023, 2023)\nnotes_imdb <- c(8.0, 8.3, 6.8, 7.4, 7.6)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Explorer nos vecteurs\nfilms\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Dune\"                       \"Oppenheimer\"               \n[3] \"Barbie\"                     \"The Zone of Interest\"      \n[5] \"Killers of the Flower Moon\"\n```\n\n\n:::\n\n```{.r .cell-code}\nlength(films)     # nombre de films\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5\n```\n\n\n:::\n\n```{.r .cell-code}\nmean(notes_imdb)  # note moyenne\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 7.62\n```\n\n\n:::\n:::\n\n\n\n\n---\n\n## Types de données : attention aux pièges !\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Vérifier le type de nos objets\nclass(notes_imdb)    # numérique - parfait pour calculer\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"numeric\"\n```\n\n\n:::\n\n```{.r .cell-code}\nclass(films)         # caractère (texte)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"character\"\n```\n\n\n:::\n\n```{.r .cell-code}\nclass(c(TRUE, FALSE))  # logique\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"logical\"\n```\n\n\n:::\n:::\n\n\n\n\n::: {.callout-warning}\n## Problème fréquent en analyse de données\nParfois, des nombres sont stockés comme du texte dans vos données. R ne peut pas calculer avec du texte !\n:::\n\n---\n\n## Types de données : attention aux pièges !\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Exemple de coercition automatique (à surveiller !)\nnotes_mixtes <- c(8.0, 7.5, \"6.8\")  # un chiffre écrit en texte\nnotes_mixtes\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"8\"   \"7.5\" \"6.8\"\n```\n\n\n:::\n\n```{.r .cell-code}\nclass(notes_mixtes)  # tout devient du texte !\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"character\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Impossible de calculer maintenant\n mean(notes_mixtes)  # Ceci produira une erreur !\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] NA\n```\n\n\n:::\n:::\n\n\n\n\n---\n\n## Solution : convertir les types\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Convertir du texte en numérique\nnotes_numeriques <- as.numeric(notes_mixtes)\nnotes_numeriques\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 8.0 7.5 6.8\n```\n\n\n:::\n\n```{.r .cell-code}\nclass(notes_numeriques)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"numeric\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# Maintenant on peut calculer\nmean(notes_numeriques)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 7.433333\n```\n\n\n:::\n:::\n\n\n\n\n::: {.callout-tip}\n## Bonne pratique\nToujours vérifier le type de vos variables avec `class()` avant de faire des calculs !\n:::\n\n---\n\n## Notre premier tableau de données\n\nUn **data frame** = tableau avec lignes et colonnes\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Créer notre base de données de films\ncinema <- data.frame(\n  titre = c(\"Dune\", \"Oppenheimer\", \"Barbie\", \"The Zone of Interest\", \"Killers of the Flower Moon\"),\n  annee = c(2021, 2023, 2023, 2023, 2023),\n  note = c(8.0, 8.3, 6.8, 7.4, 7.6),\n  genre = c(\"Sci-Fi\", \"Biographie\", \"Comédie\", \"Drame\", \"Drame\")\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Regarder notre tableau\ncinema\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                       titre annee note      genre\n1                       Dune  2021  8.0     Sci-Fi\n2                Oppenheimer  2023  8.3 Biographie\n3                     Barbie  2023  6.8    Comédie\n4       The Zone of Interest  2023  7.4      Drame\n5 Killers of the Flower Moon  2023  7.6      Drame\n```\n\n\n:::\n:::\n\n\n\n\n---\n\n## Explorer un data frame\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Informations générales\ndim(cinema)       # dimensions (lignes x colonnes)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5 4\n```\n\n\n:::\n\n```{.r .cell-code}\nnrow(cinema)      # nombre de films\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5\n```\n\n\n:::\n\n```{.r .cell-code}\nncol(cinema)      # nombre de variables\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4\n```\n\n\n:::\n\n```{.r .cell-code}\nnames(cinema)     # noms des colonnes\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"titre\" \"annee\" \"note\"  \"genre\"\n```\n\n\n:::\n:::\n\n\n\n\n---\n\n## Explorer un data frame\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Aperçu du contenu\nhead(cinema, 3)   # premiers films\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        titre annee note      genre\n1        Dune  2021  8.0     Sci-Fi\n2 Oppenheimer  2023  8.3 Biographie\n3      Barbie  2023  6.8    Comédie\n```\n\n\n:::\n\n```{.r .cell-code}\nstr(cinema)       # structure détaillée\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t5 obs. of  4 variables:\n $ titre: chr  \"Dune\" \"Oppenheimer\" \"Barbie\" \"The Zone of Interest\" ...\n $ annee: num  2021 2023 2023 2023 2023\n $ note : num  8 8.3 6.8 7.4 7.6\n $ genre: chr  \"Sci-Fi\" \"Biographie\" \"Comédie\" \"Drame\" ...\n```\n\n\n:::\n:::\n\n\n\n\n---\n\n## Accéder aux colonnes\n\n### Avec le symbole `$` (recommandé)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncinema$titre\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Dune\"                       \"Oppenheimer\"               \n[3] \"Barbie\"                     \"The Zone of Interest\"      \n[5] \"Killers of the Flower Moon\"\n```\n\n\n:::\n\n```{.r .cell-code}\ncinema$note\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 8.0 8.3 6.8 7.4 7.6\n```\n\n\n:::\n\n```{.r .cell-code}\nmean(cinema$note)  # note moyenne\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 7.62\n```\n\n\n:::\n:::\n\n\n\n\n---\n\n## Accéder aux colonnes\n### Avec les crochets `[ ]`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncinema[, \"titre\"]          # par nom\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Dune\"                       \"Oppenheimer\"               \n[3] \"Barbie\"                     \"The Zone of Interest\"      \n[5] \"Killers of the Flower Moon\"\n```\n\n\n:::\n\n```{.r .cell-code}\ncinema[, 1]                # par position\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Dune\"                       \"Oppenheimer\"               \n[3] \"Barbie\"                     \"The Zone of Interest\"      \n[5] \"Killers of the Flower Moon\"\n```\n\n\n:::\n\n```{.r .cell-code}\ncinema[, c(\"titre\", \"genre\")] # plusieurs colonnes\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                       titre      genre\n1                       Dune     Sci-Fi\n2                Oppenheimer Biographie\n3                     Barbie    Comédie\n4       The Zone of Interest      Drame\n5 Killers of the Flower Moon      Drame\n```\n\n\n:::\n:::\n\n\n\n\n---\n\n## Les fonctions : nos outils\n\nUne **fonction** fait une tâche : `fonction(argument1, argument2)`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Fonctions statistiques essentielles\nmean(cinema$note)      # note moyenne\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 7.62\n```\n\n\n:::\n\n```{.r .cell-code}\nmedian(cinema$note)    # note médiane\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 7.6\n```\n\n\n:::\n\n```{.r .cell-code}\nsd(cinema$note)        # écart-type\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.5761944\n```\n\n\n:::\n\n```{.r .cell-code}\nmin(cinema$note)       # note minimale\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 6.8\n```\n\n\n:::\n\n```{.r .cell-code}\nmax(cinema$note)       # note maximale\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 8.3\n```\n\n\n:::\n:::\n\n\n\n\n---\n\n## Les fonctions : nos outils\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Résumé complet d'une variable\nsummary(cinema$note)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   6.80    7.40    7.60    7.62    8.00    8.30 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Compter les occurrences\ntable(cinema$genre)    # combien de films par genre ?\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nBiographie    Comédie      Drame     Sci-Fi \n         1          1          2          1 \n```\n\n\n:::\n:::\n\n\n\n\n---\n\n## Les packages : étendre R {.smaller}\n\n**Les packages sont comme des applications pour R**\n\n- R de base = fonctions essentielles\n- Packages = fonctions spécialisées créées par la communauté\n- Plus de 21,000 packages disponibles sur CRAN\n- Chaque package résout des problèmes spécifiques\n\n::: {.callout-tip}\n## Analogie\nR de base = téléphone vide  \nPackages = applications qu'on télécharge\n:::\n\n---\n\n## Le Tidyverse : votre boîte à outils {.smaller}\n\n**Collection de packages pour l'analyse de données moderne**\n\n::: {.columns}\n::: {.column width=\"50%\"}\n**Packages principaux :**\n\n- `readr` : importer des données\n- `dplyr` : manipuler des données\n- `ggplot2` : créer des graphiques\n- `tidyr` : nettoyer des données\n:::\n\n::: {.column width=\"50%\"}\n**Avantages :**\n\n- Syntaxe cohérente et intuitive\n- Très utilisé en sciences sociales\n- Documentation excellente\n- S'installe en un seul package !\n:::\n:::\n\n\n\n\n::: {.cell code-copy='true'}\n\n```{.r .cell-code}\n# Installer le Tidyverse (contient plusieurs packages)\ninstall.packages(\"tidyverse\")\n```\n:::\n\n\n\n\n---\n\n## Installation vs Chargement {.smaller}\n\n::: {.callout-important}\n## Différence cruciale\n- `install.packages(\"nom\")` : télécharger le package (1 seule fois)\n- `library(nom)` : activer le package (à chaque session R)\n:::\n\n**Installer des packages**\n\n\n\n\n::: {.cell code-copy='true'}\n\n```{.r .cell-code}\n# Exemples d'installation (à faire une fois)\ninstall.packages(\"tidyverse\")\ninstall.packages(\"readxl\")\ninstall.packages(\"janitor\")\n```\n:::\n\n\n\n\n::: {.fragment}\n**Charger des packages**\n\n\n\n\n::: {.cell code-copy='true'}\n\n```{.r .cell-code}\n# À faire au début de chaque script\nlibrary(tidyverse)\nlibrary(readxl)\n```\n:::\n\n\n\n:::\n\n::: {.callout-tip}\n## Bonne pratique\nMettez toujours vos `library()` au début de votre script\n:::\n\n---\n\n\n## Comprendre l'organisation de votre ordinateur {.smaller}\n\n::: {.callout-important}\n## Votre ordinateur = une grande bibliothèque\nChaque fichier a une **adresse précise** pour le retrouver !\n:::\n\n**Exemple d'organisation :**\n```\n📁 Mon ordinateur\n  📁 Documents\n    📁 Université\n      📁 Session_Hiver2024\n        📁 Cours_R\n          📄 donnees.csv\n          📄 mon_script.R\n```\n\n**L'adresse complète (chemin) :**\n\n- Windows : `C:/Documents/Université/Session_Hiver2024/Cours_R/`\n- Mac : `/Users/votrenom/Documents/Université/Session_Hiver2024/Cours_R/`\n\n---\n\n## Où travaille R en ce moment ? {.smaller}\n\n::: {.callout-tip}\n## À tester maintenant !\n:::\n\n\n\n\n::: {.cell code-copy='true'}\n\n```{.r .cell-code}\n# Où suis-je actuellement ?\ngetwd()  # \"get working directory\" = obtenir le dossier de travail\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"/home/etienne_prx/Dropbox/travail/enseignements/R_intro_fss\"\n```\n\n\n:::\n:::\n\n\n\n\n::: {.fragment}\n\n\n\n::: {.cell code-copy='true'}\n\n```{.r .cell-code}\n# Qu'est-ce qu'il y a dans ce dossier ?\nlist.files()  # lister tous les fichiers\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"_freeze\"          \"_quarto.yml\"      \"ancien.qmd\"       \"custom.scss\"     \n [5] \"data\"             \"docs\"             \"exercices.qmd\"    \"images\"          \n [9] \"index.qmd\"        \"README.md\"        \"slides_files\"     \"slides.qmd\"      \n[13] \"slides.rmarkdown\"\n```\n\n\n:::\n:::\n\n\n\n:::\n\n**R travaille toujours dans UN dossier à la fois !**  \nC'est son \"bureau\" où il cherche vos fichiers par défaut.\n\n---\n\n## Bien organiser son projet R {.smaller}\n\n::: {.callout-note}\n## Structure recommandée\n```\n📁 Mon_Projet_R/\n  📁 code/              # tous vos scripts R\n    📄 analyse.R\n    📄 graphiques.R\n  📁 data/              # tous vos fichiers CSV, Excel\n    📄 titanic.csv\n    📄 sondage.xlsx  \n  📁 graphs/            # vos graphiques exportés\n    📄 histogram_ages.png\n  📁 outputs/           # vos résultats et rapports\n    📄 resultats.csv\n```\n:::\n\n**Pourquoi c'est important ?**\n\n- Tout est au même endroit\n- Facile de retrouver ses fichiers\n- On peut partager le dossier complet à quelqu'un\n\n---\n\n## Changer le dossier de travail de R {.smaller}\n\n**Méthode 1 : Avec du code**\n\n\n\n::: {.cell code-copy='true'}\n\n```{.r .cell-code}\n# Changer vers mon dossier de projet\nsetwd(\"C:/Documents/Université/Mon_Projet_R\")   # Windows\nsetwd(\"/Users/nom/Documents/Mon_Projet_R\")      # Mac\n\n# Vérifier que ça a marché\ngetwd()\n```\n:::\n\n\n\n\n::: {.fragment}\n**Méthode 2 : Menu RStudio**\n`Session` → `Set Working Directory` → `Choose Directory...`\n:::\n\n::: {.callout-warning}\n**Attention :** Il faut refaire `setwd()` à chaque fois qu'on ouvre RStudio !\n:::\n\n---\n\n## Lien entre RStudio et votre dossier {.smaller}\n\n::: {.columns}\n::: {.column width=\"50%\"}\n**Dans RStudio :**\n\n- **Console** : `getwd()` montre où on est\n- **Panneau Files** (bas-droite) : navigue dans les dossiers\n- **Environment** : vos objets R en mémoire\n\n:::\n\n::: {.column width=\"50%\"}\n**Sur votre ordinateur :**\n\n- **Explorateur de fichiers** (Windows) ou **Finder** (Mac)\n- Même structure de dossiers\n- Les fichiers existent vraiment !\n\n:::\n:::\n\n::: {.callout-tip}\n## Astuce\nLe panneau **Files** de RStudio montre le même contenu que `list.files()` !\n:::\n\n---\n\n## Maintenant on peut charger nos données ! {.smaller}\n\n::: {.callout-success}\n**Méthode propre**\n\n1. Créez un dossier pour votre projet\n2. Mettez-y vos fichiers de données  \n3. Utilisez `setwd()` pour y aller\n4. Maintenant R trouve vos fichiers !\n:::\n\n\n\n\n::: {.cell code-copy='true'}\n\n```{.r .cell-code}\n# Étapes pratiques :\nsetwd(\"C:/Mon_Projet_R\")              # Remplacer par cotre propre chemin\nlist.files()                          # voir mes dossiers : code, data, graphs...\ndonnees <- read.csv(\"data/titanic.csv\")  # charger depuis le dossier data\n```\n:::\n\n\n\n\n**Prochaine slide :** On va charger les vraies données du Titanic !\n\n\n---\n\n## Charger de vraies données {.smaller background-color=\"#4A90A4\"}\n\n::: {style=\"color: #333;\"}\n\nUtilisons les données **Titanic** pour pratiquer !\n\n\n\n\n::: {.cell code-copy='true'}\n\n```{.r .cell-code}\n# Charger les données Titanic\ntitanic <- read.csv(\"data/titanic.csv\")\n\n# Premier coup d'œil\nhead(titanic, 3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Survived Pclass                                               Name    Sex Age\n1        0      3                             Mr. Owen Harris Braund   male  22\n2        1      1 Mrs. John Bradley (Florence Briggs Thayer) Cumings female  38\n3        1      3                              Miss. Laina Heikkinen female  26\n  Siblings.Spouses.Aboard Parents.Children.Aboard    Fare\n1                       1                       0  7.2500\n2                       1                       0 71.2833\n3                       0                       0  7.9250\n```\n\n\n:::\n:::\n\n\n\n\n::: {.callout-tip}\n## Téléchargez les données\nCliquez sur ce [lien](https://web.stanford.edu/class/archive/cs/cs109/cs109.1166/stuff/titanic.csv) \n\nAttention de bien spécifier votre chemin d'accès!\n:::\n:::\n\n---\n\n## Explorer la structure des données {.smaller background-color=\"#4A90A4\"}\n\n::: {style=\"color: #333;\"}\n\n**Toujours commencer par comprendre nos données**\n\n\n\n\n::: {.cell code-copy='true'}\n\n```{.r .cell-code}\n# Informations de base\ndim(titanic)          # dimensions (lignes x colonnes)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 887   8\n```\n\n\n:::\n\n```{.r .cell-code}\nnames(titanic)        # noms des colonnes\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Survived\"                \"Pclass\"                 \n[3] \"Name\"                    \"Sex\"                    \n[5] \"Age\"                     \"Siblings.Spouses.Aboard\"\n[7] \"Parents.Children.Aboard\" \"Fare\"                   \n```\n\n\n:::\n\n```{.r .cell-code}\nnrow(titanic)         # nombre de lignes\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 887\n```\n\n\n:::\n\n```{.r .cell-code}\nncol(titanic)         # nombre de colonnes\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 8\n```\n\n\n:::\n:::\n\n\n\n:::\n\n---\n\n## Examiner la structure détaillée {.smaller background-color=\"#4A90A4\"}\n\n::: {style=\"color: #333;\"}\n\n\n\n\n::: {.cell code-copy='true'}\n\n```{.r .cell-code}\n# Structure complète des données\nstr(titanic)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t887 obs. of  8 variables:\n $ Survived               : int  0 1 1 1 0 0 0 0 1 1 ...\n $ Pclass                 : int  3 1 3 1 3 3 1 3 3 2 ...\n $ Name                   : chr  \"Mr. Owen Harris Braund\" \"Mrs. John Bradley (Florence Briggs Thayer) Cumings\" \"Miss. Laina Heikkinen\" \"Mrs. Jacques Heath (Lily May Peel) Futrelle\" ...\n $ Sex                    : chr  \"male\" \"female\" \"female\" \"female\" ...\n $ Age                    : num  22 38 26 35 35 27 54 2 27 14 ...\n $ Siblings.Spouses.Aboard: int  1 1 0 1 0 0 0 3 0 1 ...\n $ Parents.Children.Aboard: int  0 0 0 0 0 0 0 1 2 0 ...\n $ Fare                   : num  7.25 71.28 7.92 53.1 8.05 ...\n```\n\n\n:::\n:::\n\n\n\n\n::: {.fragment}\n\n\n\n::: {.cell code-copy='true'}\n\n```{.r .cell-code}\n# Aperçu moderne avec glimpse (dplyr)\nlibrary(dplyr)\nglimpse(titanic)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 887\nColumns: 8\n$ Survived                <int> 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1…\n$ Pclass                  <int> 3, 1, 3, 1, 3, 3, 1, 3, 3, 2, 3, 1, 3, 3, 3, 2…\n$ Name                    <chr> \"Mr. Owen Harris Braund\", \"Mrs. John Bradley (…\n$ Sex                     <chr> \"male\", \"female\", \"female\", \"female\", \"male\", …\n$ Age                     <dbl> 22, 38, 26, 35, 35, 27, 54, 2, 27, 14, 4, 58, …\n$ Siblings.Spouses.Aboard <int> 1, 1, 0, 1, 0, 0, 0, 3, 0, 1, 1, 0, 0, 1, 0, 0…\n$ Parents.Children.Aboard <int> 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 1, 0, 0, 5, 0, 0…\n$ Fare                    <dbl> 7.2500, 71.2833, 7.9250, 53.1000, 8.0500, 8.45…\n```\n\n\n:::\n:::\n\n\n\n:::\n\n**Ces fonctions montrent :** types de variables, premières valeurs, dimensions\n:::\n\n---\n\n## Résumé statistique des variables {.smaller background-color=\"#4A90A4\"}\n\n::: {style=\"color: #333;\"}\n\n\n\n\n::: {.cell code-copy='true'}\n\n```{.r .cell-code}\n# Résumé statistique de toutes les variables\nsummary(titanic)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Survived          Pclass          Name               Sex           \n Min.   :0.0000   Min.   :1.000   Length:887         Length:887        \n 1st Qu.:0.0000   1st Qu.:2.000   Class :character   Class :character  \n Median :0.0000   Median :3.000   Mode  :character   Mode  :character  \n Mean   :0.3856   Mean   :2.306                                        \n 3rd Qu.:1.0000   3rd Qu.:3.000                                        \n Max.   :1.0000   Max.   :3.000                                        \n      Age        Siblings.Spouses.Aboard Parents.Children.Aboard\n Min.   : 0.42   Min.   :0.0000          Min.   :0.0000         \n 1st Qu.:20.25   1st Qu.:0.0000          1st Qu.:0.0000         \n Median :28.00   Median :0.0000          Median :0.0000         \n Mean   :29.47   Mean   :0.5254          Mean   :0.3833         \n 3rd Qu.:38.00   3rd Qu.:1.0000          3rd Qu.:0.0000         \n Max.   :80.00   Max.   :8.0000          Max.   :6.0000         \n      Fare        \n Min.   :  0.000  \n 1st Qu.:  7.925  \n Median : 14.454  \n Mean   : 32.305  \n 3rd Qu.: 31.137  \n Max.   :512.329  \n```\n\n\n:::\n:::\n\n\n\n\n**Ce résumé nous révèle :**\nMoyennes, médianes, quartiles pour les variables numériques | Fréquences pour les variables catégorielles | Présence de valeurs manquantes (NA's)\n:::\n\n---\n\n## Gérer les valeurs manquantes {.smaller background-color=\"#4A90A4\"}\n\n::: {style=\"color: #333;\"}\n\n\n\n\n::: {.cell code-copy='true'}\n\n```{.r .cell-code}\n# Compter les valeurs manquantes par colonne\ncolSums(is.na(titanic))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n               Survived                  Pclass                    Name \n                      0                       0                       0 \n                    Sex                     Age Siblings.Spouses.Aboard \n                      0                       0                       0 \nParents.Children.Aboard                    Fare \n                      0                       0 \n```\n\n\n:::\n:::\n\n\n\n\n::: {.fragment}\n\n\n\n::: {.cell code-copy='true'}\n\n```{.r .cell-code}\n# Compter les NA dans une colonne spécifique\nsum(is.na(titanic$Age))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n\n```{.r .cell-code}\n# Voir quels passagers ont un âge manquant\nhead(titanic[is.na(titanic$Age), ])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] Survived                Pclass                  Name                   \n[4] Sex                     Age                     Siblings.Spouses.Aboard\n[7] Parents.Children.Aboard Fare                   \n<0 rows> (or 0-length row.names)\n```\n\n\n:::\n:::\n\n\n\n:::\n\n::: {.callout-note}\n**na.rm = TRUE** dans les fonctions statistiques ignore les valeurs manquantes\n:::\n:::\n\n---\n\n## Analyse des variables individuelles {.smaller background-color=\"#4A90A4\"}\n\n::: {style=\"color: #333;\"}\n\n\n\n\n::: {.cell code-copy='true'}\n\n```{.r .cell-code}\n# Variables catégorielles : compter les occurrences\ntable(titanic$Survived)    # survivants\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n  0   1 \n545 342 \n```\n\n\n:::\n\n```{.r .cell-code}\ntable(titanic$Pclass)      # classes\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n  1   2   3 \n216 184 487 \n```\n\n\n:::\n\n```{.r .cell-code}\ntable(titanic$Sex)         # sexe\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nfemale   male \n   314    573 \n```\n\n\n:::\n:::\n\n\n\n\n::: {.fragment}\n\n\n\n::: {.cell code-copy='true'}\n\n```{.r .cell-code}\n# En pourcentages\nprop.table(table(titanic$Survived)) * 100\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n       0        1 \n61.44307 38.55693 \n```\n\n\n:::\n:::\n\n\n\n:::\n:::\n\n---\n\n## Analyse des variables numériques {.smaller background-color=\"#4A90A4\"}\n\n::: {style=\"color: #333;\"}\n\n\n\n\n::: {.cell code-copy='true'}\n\n```{.r .cell-code}\n# Statistiques sur l'âge\nmean(titanic$Age, na.rm = TRUE)     # âge moyen\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 29.47144\n```\n\n\n:::\n\n```{.r .cell-code}\nmedian(titanic$Age, na.rm = TRUE)   # âge médian\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 28\n```\n\n\n:::\n\n```{.r .cell-code}\nsd(titanic$Age, na.rm = TRUE)       # écart-type\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 14.12191\n```\n\n\n:::\n\n```{.r .cell-code}\nrange(titanic$Age, na.rm = TRUE)    # min et max\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1]  0.42 80.00\n```\n\n\n:::\n:::\n\n\n\n\n::: {.fragment}\n\n\n\n::: {.cell code-copy='true'}\n\n```{.r .cell-code}\n# Statistiques sur le prix du billet\nsummary(titanic$Fare)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   7.925  14.454  32.305  31.137 512.329 \n```\n\n\n:::\n:::\n\n\n\n:::\n:::\n\n---\n\n## Analyse croisée de variables {.smaller background-color=\"#4A90A4\"}\n\n::: {style=\"color: #333;\"}\n\n\n\n\n::: {.cell code-copy='true'}\n\n```{.r .cell-code}\n# Croiser deux variables catégorielles\ntable(titanic$Pclass, titanic$Survived)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   \n      0   1\n  1  80 136\n  2  97  87\n  3 368 119\n```\n\n\n:::\n:::\n\n\n\n\n::: {.fragment}\n\n\n\n::: {.cell code-copy='true'}\n\n```{.r .cell-code}\n# Ajouter les noms de lignes/colonnes pour clarté\ntable(Classe = titanic$Pclass, Survécu = titanic$Survived)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      Survécu\nClasse   0   1\n     1  80 136\n     2  97  87\n     3 368 119\n```\n\n\n:::\n:::\n\n\n\n:::\n\n**Ce tableau montre :** répartition des survivants selon la classe\n:::\n\n---\n\n## Manipulation des données avec dplyr {.smaller background-color=\"#4A90A4\"}\n\n::: {style=\"color: #333;\"}\n\n**Le package dplyr facilite la manipulation de données**\n\n\n\n\n::: {.cell code-copy='true'}\n\n```{.r .cell-code}\n# Charger dplyr (ou tidyverse)\nlibrary(dplyr)\n```\n:::\n\n\n\n\n**Fonctions principales :**\n\n- `select()` : sélectionner des colonnes\n- `filter()` : filtrer des lignes\n- `mutate()` : créer/modifier des variables\n- `group_by()` + `summarise()` : grouper et résumer\n:::\n\n---\n\n## Sélectionner des colonnes {.smaller background-color=\"#4A90A4\"}\n\n::: {style=\"color: #333;\"}\n\n\n\n\n::: {.cell code-copy='true'}\n\n```{.r .cell-code}\n# Garder seulement certaines colonnes\ntitanic_simple <- titanic %>%\n  select(Survived, Pclass, Sex, Age, Fare)\n\nhead(titanic_simple, 3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Survived Pclass    Sex Age    Fare\n1        0      3   male  22  7.2500\n2        1      1 female  38 71.2833\n3        1      3 female  26  7.9250\n```\n\n\n:::\n:::\n\n\n\n\n:::\n\n---\n\n## Filtrer des lignes {.smaller background-color=\"#4A90A4\"}\n\n::: {style=\"color: #333;\"}\n\n\n\n\n::: {.cell code-copy='true'}\n\n```{.r .cell-code}\n# Filtrer les passagers de première classe\npremiere_classe <- titanic %>%\n  filter(Pclass == 1)\n\nnrow(premiere_classe)  # combien de passagers ?\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 216\n```\n\n\n:::\n:::\n\n\n\n\n::: {.fragment}\n\n\n\n::: {.cell code-copy='true'}\n\n```{.r .cell-code}\n# Filtres multiples\nadultes_survie <- titanic %>%\n  filter(Age >= 18, Survived == 1)\n\nnrow(adultes_survie)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 277\n```\n\n\n:::\n:::\n\n\n\n:::\n\n**Opérateurs de filtre :** `==`, `!=`, `>`, `<`, `>=`, `<=`, `%in%`\n:::\n\n---\n\n## Créer de nouvelles variables {.smaller background-color=\"#4A90A4\"}\n\n::: {style=\"color: #333;\"}\n\n\n\n\n::: {.cell code-copy='true'}\n\n```{.r .cell-code}\n# Créer une variable catégorielle âge\ntitanic <- titanic %>%\n  mutate(groupe_age = ifelse(Age < 18, \"Enfant\", \"Adulte\"))\n\ntable(titanic$groupe_age)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nAdulte Enfant \n   757    130 \n```\n\n\n:::\n:::\n\n\n\n\n::: {.fragment}\n\n\n\n::: {.cell code-copy='true'}\n\n```{.r .cell-code}\n# Créer plusieurs variables en une fois\ntitanic <- titanic %>%\n  mutate(\n    prix_eleve = ifelse(Fare > 50, \"Cher\", \"Abordable\"),\n    taille_famille = Siblings.Spouses.Aboard + Parents.Children.Aboard + 1  # inclure le passager lui-même\n  )\n\n# Visualiser les premières lignes des nouvelles variables\ntitanic_newvars <- titanic %>%\n  select(groupe_age, prix_eleve, taille_famille)\n\nhead(titanic_newvars)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  groupe_age prix_eleve taille_famille\n1     Adulte  Abordable              2\n2     Adulte       Cher              2\n3     Adulte  Abordable              1\n4     Adulte       Cher              2\n5     Adulte  Abordable              1\n6     Adulte  Abordable              1\n```\n\n\n:::\n:::\n\n\n\n:::\n:::\n\n---\n\n## Nettoyage de données avancé {.smaller background-color=\"#4A90A4\"}\n\n::: {style=\"color: #333;\"}\n\n\n\n\n::: {.cell code-copy='true'}\n\n```{.r .cell-code}\n# Stratégie pour gérer les valeurs manquantes dans la variable Age\n# Étape 1: Remplacer les NA par la médiane des âges existants\ntitanic <- titanic %>%\n  mutate(Age = ifelse(is.na(Age),                    # SI l'âge est manquant (NA)\n                      median(Age, na.rm = TRUE),      # ALORS utiliser la médiane\n                      Age))                           # SINON garder l'âge original\n\n# Étape 2: Vérifier que le remplacement a fonctionné\nsum(is.na(titanic$Age))  # Compter combien de NA restent (devrait être 0)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n\n\n\n::: {.fragment}\n\n\n\n::: {.cell code-copy='true'}\n\n```{.r .cell-code}\n# Standardiser les noms de colonnes (optionnel)\ntitanic <- titanic %>%\n  rename(\n    survie = Survived,\n    classe = Pclass,\n    sexe = Sex\n  )\n```\n:::\n\n\n\n:::\n:::\n\n---\n\n## Grouper et résumer {.smaller background-color=\"#4A90A4\"}\n\n::: {style=\"color: #333;\"}\n\n\n\n\n::: {.cell code-copy='true'}\n\n```{.r .cell-code}\n# Statistiques par groupe\ntitanic %>%\n  group_by(classe) %>%\n  summarise(\n    nb_passagers = n(),\n    nb_survivants = sum(survie),\n    taux_survie = round(mean(survie) * 100, 1),\n    age_moyen = round(mean(Age, na.rm = TRUE), 1)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 5\n  classe nb_passagers nb_survivants taux_survie age_moyen\n   <int>        <int>         <int>       <dbl>     <dbl>\n1      1          216           136        63        38.8\n2      2          184            87        47.3      29.9\n3      3          487           119        24.4      25.2\n```\n\n\n:::\n:::\n\n\n\n\n**La fonction `n()` compte le nombre de lignes dans chaque groupe**\n:::\n\n---\n\n## Groupements multiples {.smaller background-color=\"#4A90A4\"}\n\n::: {style=\"color: #333;\"}\n\n\n\n\n::: {.cell code-copy='true'}\n\n```{.r .cell-code}\n# Analyser par classe ET sexe\nresume_complet <- titanic %>%\n  group_by(classe, sexe) %>%\n  summarise(\n    nb_passagers = n(),\n    taux_survie = round(mean(survie) * 100, 1)\n  )\n\nresume_complet\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n# Groups:   classe [3]\n  classe sexe   nb_passagers taux_survie\n   <int> <chr>         <int>       <dbl>\n1      1 female           94        96.8\n2      1 male            122        36.9\n3      2 female           76        92.1\n4      2 male            108        15.7\n5      3 female          144        50  \n6      3 male            343        13.7\n```\n\n\n:::\n:::\n\n\n\n:::\n\n---\n\n## Graphiques simples : graphiques en barres {.smaller background-color=\"#4A90A4\"}\n\n::: {style=\"color: #333;\"}\n\n**Commençons par le plus simple : compter des catégories**\n\n\n\n\n::: {.cell layout-align=\"center\" code-copy='true'}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\n# Nombre de passagers par classe\nggplot(titanic, aes(x = factor(classe))) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/unnamed-chunk-50-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n:::\n\n---\n\n## Graphiques simples : graphiques en barres {.smaller background-color=\"#4A90A4\"}\n\n::: {style=\"color: #333;\"}\n\n**Éléments de base :**\n\n- `ggplot()` : initialise le graphique avec les données\n- `aes()` : spécifie quelles variables utiliser\n- `geom_bar()` : type de graphique (barres)\n:::\n\n---\n\n## Ajouter des couleurs et labels {.smaller background-color=\"#4A90A4\"}\n\n::: {style=\"color: #333;\"}\n\n\n\n\n::: {.cell layout-align=\"center\" code-copy='true'}\n\n```{.r .cell-code}\n# Même graphique, mais plus joli\nggplot(titanic, aes(x = factor(classe))) +\n  geom_bar(fill = \"steelblue\", color = \"white\") +\n  labs(\n    title = \"Répartition des passagers par classe\",\n    x = \"Classe\", \n    y = \"Nombre de passagers\"\n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/unnamed-chunk-51-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n:::\n\n---\n\n## Ajouter des couleurs et labels {.smaller background-color=\"#4A90A4\"}\n\n::: {style=\"color: #333;\"}\n\n**Nouveaux éléments :**\n\n- `fill` : couleur de remplissage des barres\n- `labs()` : ajouter titres et étiquettes\n- `theme_minimal()` : style épuré\n:::\n\n---\n\n## Graphiques empilés : deux variables {.smaller background-color=\"#4A90A4\"}\n\n::: {style=\"color: #333;\"}\n\n\n\n\n::: {.cell layout-align=\"center\" code-copy='true'}\n\n```{.r .cell-code}\n# Survivants par classe (barres empilées)\nggplot(titanic, aes(x = factor(classe), fill = factor(survie))) +\n  geom_bar() +\n  labs(\n    title = \"Survivants par classe sur le Titanic\",\n    x = \"Classe\", \n    y = \"Nombre de passagers\",\n    fill = \"Survécu\"\n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/unnamed-chunk-52-1.png){fig-align='center' width=960}\n:::\n\n```{.r .cell-code}\n## **Nouvelle technique :** `fill = factor(survie)` dans `aes()` crée des couleurs automatiques selon la survie\n```\n:::\n\n\n\n\n:::\n\n---\n\n## Graphiques en proportions {.smaller background-color=\"#4A90A4\"}\n\n::: {style=\"color: #333;\"}\n\n**`position = \"fill\"`** transforme en proportions (0 à 1) pour comparer les taux\n\n\n\n\n::: {.cell layout-align=\"center\" code-copy='true'}\n\n```{.r .cell-code}\n# Proportions plutôt que nombres absolus\nggplot(titanic, aes(x = factor(classe), fill = factor(survie))) +\n  geom_bar(position = \"fill\") +\n  labs(\n    title = \"Taux de survie par classe\",\n    x = \"Classe\", \n    y = \"Proportion\",\n    fill = \"Survécu\"\n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/unnamed-chunk-53-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n:::\n\n---\n\n## Histogrammes : distribution d'une variable {.smaller background-color=\"#4A90A4\"}\n\n::: {style=\"color: #333;\"}\n\n\n\n\n::: {.cell layout-align=\"center\" code-copy='true'}\n\n```{.r .cell-code}\n# Distribution des âges\nggplot(titanic, aes(x = Age)) +\n  geom_histogram(bins = 20, fill = \"lightblue\", color = \"white\", alpha = 0.7) +\n  labs(\n    title = \"Distribution des âges sur le Titanic\",\n    x = \"Âge\", \n    y = \"Nombre de passagers\"\n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/unnamed-chunk-54-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n:::\n\n---\n\n## Histogrammes : distribution d'une variable {.smaller background-color=\"#4A90A4\"}\n\n::: {style=\"color: #333;\"}\n\n**Nouveaux éléments :**\n\n- `geom_histogram()` : pour variables numériques continues\n- `bins = 20` : nombre de barres\n- `alpha = 0.7` : transparence (0 = invisible, 1 = opaque)\n:::\n\n---\n\n## Nuages de points {.smaller background-color=\"#4A90A4\"}\n\n::: {style=\"color: #333;\"}\n\n**`geom_point()`** crée un nuage de points pour explorer les relations entre variables numériques\n\n\n\n\n::: {.cell layout-align=\"center\" code-copy='true'}\n\n```{.r .cell-code}\n# Relation âge-prix du billet\nggplot(titanic, aes(x = Age, y = Fare)) +\n  geom_point(alpha = 0.6) +\n  labs(\n    title = \"Âge vs Prix du billet\",\n    x = \"Âge\", \n    y = \"Prix du billet\"\n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/unnamed-chunk-55-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n:::\n\n---\n\n## Nuages de points avec couleurs {.smaller background-color=\"#4A90A4\"}\n\n::: {style=\"color: #333;\"}\n\n**La couleur révèle des patterns :** les survivants avaient-ils des billets plus chers ?\n\n\n\n\n::: {.cell layout-align=\"center\" code-copy='true'}\n\n```{.r .cell-code}\n# Ajouter la survie comme couleur\nggplot(titanic, aes(x = Age, y = Fare, color = factor(survie))) +\n  geom_point(alpha = 0.6) +\n  labs(\n    title = \"Âge vs Prix du billet selon la survie\",\n    x = \"Âge\", \n    y = \"Prix du billet\",\n    color = \"Survécu\"\n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](slides_files/figure-revealjs/unnamed-chunk-56-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n:::\n\n---\n\n## Sauvegarder notre travail {.smaller background-color=\"#4A90A4\"}\n\n::: {style=\"color: #333;\"}\n\n\n\n\n::: {.cell code-copy='true'}\n\n```{.r .cell-code}\n# Sauvegarder le dernier graphique\nggsave(\"age_prix_survie.png\", width = 10, height = 6)\n\n# Sauvegarder des données nettoyées\nwrite.csv(titanic, \"titanic_nettoye.csv\", row.names = FALSE)\n\n# Sauvegarder nos résultats d'analyse\nwrite.csv(resume_complet, \"analyse_survie_classe_sexe.csv\", row.names = FALSE)\n```\n:::\n\n\n\n\n**Toujours sauvegarder :** scripts, données nettoyées, graphiques, résultats\n:::\n\n---\n\n## Messages d'erreur : pas de panique ! {.smaller background-color=\"#4A90A4\"}\n\n::: {style=\"color: #333;\"}\n\n**Erreurs courantes et solutions :**\n\n\n\n\n::: {.cell code-copy='true'}\n\n```{.r .cell-code}\n# Erreur : objet non trouvé\nmean(donnees$age)\n# Error: object 'donnees' not found\n# → Vérifier le nom de l'objet\n\n# Erreur : colonne inexistante  \ntitanic$ages  # au lieu de Age\n# → Utiliser names(titanic) pour voir les vraies colonnes\n\n# Erreur : parenthèse manquante\nmean(titanic$Age\n# → Vérifier que toutes les parenthèses sont fermées\n```\n:::\n\n\n\n\n**Réflexes :** lire le message, vérifier l'orthographe, tester ligne par ligne\n:::\n\n---\n\n## Bonnes pratiques pour l'analyse {.smaller background-color=\"#4A90A4\"}\n\n::: {style=\"color: #333;\"}\n\n::: {.callout-tip}\n## Workflow recommandé\n\n1. **Explorer d'abord :** `str()`, `summary()`, `glimpse()`\n2. **Nettoyer ensuite :** gérer les NA, corriger les types\n3. **Analyser pas à pas :** une variable, puis des croisements\n4. **Visualiser pour comprendre :** graphiques simples puis complexes\n5. **Documenter et sauvegarder :** commenter le code, sauvegarder les résultats\n:::\n\n\n\n\n::: {.cell code-copy='true'}\n\n```{.r .cell-code}\n# Exemple de code bien structuré\n# 1. Chargement et exploration\ntitanic <- read.csv(\"data/titanic.csv\")\nstr(titanic)\n\n# 2. Nettoyage\ntitanic <- titanic %>% \n  mutate(Age = ifelse(is.na(Age), median(Age, na.rm = TRUE), Age))\n\n# 3. Analyse et visualisation\n# ... votre analyse ...\n```\n:::\n\n\n\n:::\n\n---\n\n## Ce qu'on a appris aujourd'hui {.smaller}\n\n::: {.callout-note}\n## Récapitulatif\n\n✅ Interface RStudio et console  \n✅ Objets, vecteurs et data frames  \n✅ Types de données et fonctions  \n✅ Import et exploration de données  \n✅ Analyse descriptive (moyennes, tableaux)  \n✅ Premiers graphiques avec ggplot2  \n✅ Manipulation avec dplyr (filter, select, group_by)\n:::\n\n**Vous pouvez maintenant :**\n\n- Charger des données\n- Les explorer et les résumer\n- Créer des graphiques de base\n- Faire des analyses descriptives simples\n\n---\n\n## Ressources pour continuer {.smaller}\n\n**Documentation et aide :**\n\n- `?fonction` dans R (ex: `?mean`)\n- [R Documentation](https://www.rdocumentation.org/)\n- [RStudio Cheatsheets](https://posit.co/resources/cheatsheets/)\n\n**Apprentissage :**\n\n- [swirl](https://swirlstats.com/) - apprendre R dans R\n- [R for Data Science](https://r4ds.hadley.nz/) (gratuit en ligne)\n- ChatGPT pour déboguer vos erreurs !\n\n**Communauté :**\n\n- [Stack Overflow](https://stackoverflow.com/questions/tagged/r)\n- [RStudio Community](https://community.rstudio.com/)\n\n---\n\n## Questions ? {.smaller}\n\n::: {.callout-tip appearance=\"simple\"}\n## Merci pour votre attention !\n\n**Contact :** etienne.proulx.2@ulaval.ca\n\n**Tous les codes sont copiables depuis cette présentation**\n:::\n\n\n**Prochaines étapes :** Continuez avec vos propres données et n'hésitez pas à expérimenter !",
    "supporting": [
      "slides_files/figure-revealjs"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}