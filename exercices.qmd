---
title: "Exercices pratiques"
subtitle: "Mise en pratique des concepts R"
lang: fr
format:
  html:
    code-fold: false
    code-copy: true
execute:
  echo: true
  eval: true
  warning: false
  message: false
---

```{r setup}
#| include: false
library(ggplot2)
library(dplyr)
library(readr)
```

## üìã Instructions g√©n√©rales

Cet exercice pratique vous permettra de mettre en application tous les concepts vus dans la formation R. Vous travaillerez avec des **vraies donn√©es** sur l'esp√©rance de vie et l'√©conomie des pays du monde.

### üéØ Objectifs de l'exercice

- Manipuler des objets et vecteurs R
- Explorer un dataset r√©el
- Utiliser les fonctions de base et dplyr
- Cr√©er des visualisations avec ggplot2
- Analyser des tendances dans les donn√©es

### üíæ Comment proc√©der

1. **T√©l√©chargez les fichiers n√©cessaires** :
   - [**Script R de l'exercice**](script/exercice_etudiant.R)
   - [**Donn√©es CSV**](data/donnees_pays.csv)
2. **Placez les deux fichiers** dans le m√™me dossier sur votre ordinateur
3. **Ouvrez le script** dans RStudio
4. **D√©finissez votre dossier de travail** (instructions dans le script)
5. **Suivez les instructions** dans le script (zones √† compl√©ter marqu√©es par `# √Ä COMPL√âTER`)
6. **Ex√©cutez votre code** au fur et √† mesure
7. **Consultez les solutions** ci-dessous si vous √™tes bloqu√©

::: {.callout-important}
## üìñ Donn√©es utilis√©es
Le fichier **donnees_pays.csv** contient des donn√©es sur l'esp√©rance de vie, la population et le PIB par habitant pour **142 pays** de 1952 √† 2007. Ces donn√©es proviennent du c√©l√®bre dataset Gapminder utilis√© mondialement pour l'enseignement de l'analyse de donn√©es.

**Variables disponibles :**
- `country` : Nom du pays
- `continent` : Continent (Africa, Americas, Asia, Europe, Oceania)
- `year` : Ann√©e (1952 √† 2007, par intervalles de 5 ans)
- `lifeExp` : Esp√©rance de vie √† la naissance (ann√©es)
- `pop` : Population totale
- `gdpPercap` : PIB par habitant (dollars US, ajust√© inflation)
:::

---

## üèÅ Exercice 1 : Premiers pas avec les objets

**Objectif** : Cr√©er des objets et vecteurs pour vous familiariser avec R

### Consignes
1. Cr√©ez un objet `pays_prefere` avec le nom de votre pays favori
2. Cr√©ez un vecteur `continents` avec les 5 continents principaux
3. Cr√©ez un vecteur `populations` avec des populations fictives (en millions)
4. V√©rifiez les types de donn√©es avec `class()`

::: {.panel-tabset}

## Solution

```{r}
#| eval: false
# 1. Cr√©er un objet
pays_prefere <- "Canada"

# 2. Cr√©er un vecteur de continents
continents <- c("Afrique", "Am√©rique", "Asie", "Europe", "Oc√©anie")

# 3. Cr√©er un vecteur de populations (en millions)
populations <- c(1200, 580, 4600, 750, 45)

# 4. V√©rifier les types
class(pays_prefere)   # character
class(continents)     # character
class(populations)    # numeric
```

:::

---

## üåç Exercice 2 : Explorer le dataset gapminder

**Objectif** : Charger et explorer des vraies donn√©es internationales

### Consignes
1. Installez et chargez le package `gapminder`
2. Chargez le dataset dans un objet appel√© `donnees`
3. Explorez la structure des donn√©es (`dim()`, `head()`, `str()`, `summary()`)
4. Identifiez les variables disponibles

::: {.panel-tabset}

## Solution

```{r}
#| eval: false
# 1. Installer et charger le package (√† faire une seule fois)
# install.packages("gapminder")
library(gapminder)

# 2. Charger les donn√©es
donnees <- gapminder

# 3. Explorer la structure
dim(donnees)        # dimensions
head(donnees)       # premiers cas
str(donnees)        # structure d√©taill√©e
summary(donnees)    # r√©sum√© statistique

# 4. Voir les noms des colonnes
names(donnees)
```

:::

---

## üîç Exercice 3 : Analyse descriptive

**Objectif** : Analyser les variables avec des fonctions statistiques

### Consignes
1. Calculez l'esp√©rance de vie moyenne mondiale
2. Trouvez le PIB par habitant minimum et maximum
3. Comptez combien de pays uniques sont dans le dataset
4. Identifiez les ann√©es disponibles dans les donn√©es

::: {.panel-tabset}

## Solution

```{r}
# Charger les donn√©es pour les solutions
library(gapminder)
donnees <- gapminder

# 1. Esp√©rance de vie moyenne
mean(donnees$lifeExp)

# 2. PIB par habitant min et max
min(donnees$gdpPercap)
max(donnees$gdpPercap)

# 3. Nombre de pays uniques
length(unique(donnees$country))

# 4. Ann√©es disponibles
unique(donnees$year)
sort(unique(donnees$year))  # pour les avoir en ordre
```

:::

---

## üõ†Ô∏è Exercice 4 : Manipulation avec dplyr

**Objectif** : Filtrer, s√©lectionner et transformer les donn√©es

### Consignes
1. Filtrez les donn√©es pour l'ann√©e 2007 seulement
2. S√©lectionnez uniquement les colonnes pays, continent et esp√©rance de vie
3. Cr√©ez une nouvelle variable `esperance_vie_mois` (en mois au lieu d'ann√©es)
4. Triez les pays par esp√©rance de vie d√©croissante

::: {.panel-tabset}

## Solution

```{r}
library(dplyr)

# 1. Filtrer pour 2007
donnees_2007 <- donnees %>%
  filter(year == 2007)

# 2. S√©lectionner certaines colonnes
donnees_select <- donnees_2007 %>%
  select(country, continent, lifeExp)

# 3. Cr√©er nouvelle variable (esp√©rance de vie en mois)
donnees_mois <- donnees_select %>%
  mutate(esperance_vie_mois = lifeExp * 12)

# 4. Trier par esp√©rance de vie d√©croissante
donnees_triees <- donnees_mois %>%
  arrange(desc(lifeExp))

# Voir le r√©sultat
head(donnees_triees)
```

:::

---

## üìä Exercice 5 : Analyses par groupe

**Objectif** : Utiliser `group_by()` et `summarise()` pour des analyses par continent

### Consignes
1. Calculez l'esp√©rance de vie moyenne par continent en 2007
2. Trouvez le PIB par habitant m√©dian par continent
3. Comptez le nombre de pays par continent
4. Identifiez le continent avec la plus haute esp√©rance de vie moyenne

::: {.panel-tabset}

## Solution

```{r}
# 1. Esp√©rance de vie moyenne par continent (2007)
esperance_continent <- donnees %>%
  filter(year == 2007) %>%
  group_by(continent) %>%
  summarise(esperance_moy = mean(lifeExp))

print(esperance_continent)

# 2. PIB m√©dian par continent
pib_continent <- donnees %>%
  filter(year == 2007) %>%
  group_by(continent) %>%
  summarise(pib_median = median(gdpPercap))

print(pib_continent)

# 3. Nombre de pays par continent
nb_pays <- donnees %>%
  filter(year == 2007) %>%
  group_by(continent) %>%
  summarise(nombre_pays = n())

print(nb_pays)

# 4. Continent avec plus haute esp√©rance de vie
esperance_continent %>%
  arrange(desc(esperance_moy)) %>%
  head(1)
```

:::

---

## üìà Exercice 6 : Visualisations

**Objectif** : Cr√©er des graphiques pour explorer les tendances

### Consignes
1. Cr√©ez un graphique en barres de l'esp√©rance de vie par continent (2007)
2. Cr√©ez un histogramme du PIB par habitant en 2007
3. Cr√©ez un nuage de points PIB vs esp√©rance de vie (2007)
4. Ajoutez des couleurs par continent au nuage de points

::: {.panel-tabset}

## Solution

```{r}
library(ggplot2)

# Pr√©parer les donn√©es pour 2007
donnees_2007 <- donnees %>% filter(year == 2007)

# 1. Graphique en barres par continent
donnees_2007 %>%
  group_by(continent) %>%
  summarise(esperance_moy = mean(lifeExp)) %>%
  ggplot(aes(x = continent, y = esperance_moy)) +
  geom_col(fill = "steelblue") +
  labs(title = "Esp√©rance de vie moyenne par continent (2007)",
       x = "Continent", y = "Esp√©rance de vie (ann√©es)")

# 2. Histogramme du PIB par habitant
ggplot(donnees_2007, aes(x = gdpPercap)) +
  geom_histogram(bins = 20, fill = "lightcoral", alpha = 0.7) +
  labs(title = "Distribution du PIB par habitant (2007)",
       x = "PIB par habitant", y = "Nombre de pays")

# 3. Nuage de points PIB vs esp√©rance de vie
ggplot(donnees_2007, aes(x = gdpPercap, y = lifeExp)) +
  geom_point() +
  labs(title = "Relation PIB - Esp√©rance de vie (2007)",
       x = "PIB par habitant", y = "Esp√©rance de vie (ann√©es)")

# 4. Nuage de points avec couleurs par continent
ggplot(donnees_2007, aes(x = gdpPercap, y = lifeExp, color = continent)) +
  geom_point(size = 3) +
  labs(title = "Relation PIB - Esp√©rance de vie par continent (2007)",
       x = "PIB par habitant", y = "Esp√©rance de vie (ann√©es)",
       color = "Continent")
```

:::

---

## üéØ Exercice bonus : Analyse temporelle

**Objectif** : Explorer l'√©volution dans le temps

### Consignes
1. Calculez l'√©volution de l'esp√©rance de vie moyenne mondiale par d√©cennie
2. Identifiez le pays avec la plus forte croissance d'esp√©rance de vie entre 1952 et 2007
3. Cr√©ez un graphique lin√©aire de l'√©volution du PIB moyen par continent

::: {.panel-tabset}

## Solution

```{r}
# 1. √âvolution par d√©cennie
evolution_decennie <- donnees %>%
  group_by(year) %>%
  summarise(esperance_mondiale = mean(lifeExp))

print(evolution_decennie)

# 2. Plus forte croissance d'esp√©rance de vie
croissance_pays <- donnees %>%
  filter(year %in% c(1952, 2007)) %>%
  group_by(country) %>%
  summarise(
    croissance = lifeExp[year == 2007] - lifeExp[year == 1952]
  ) %>%
  arrange(desc(croissance))

print(head(croissance_pays))

# 3. Graphique √©volution PIB par continent
donnees %>%
  group_by(continent, year) %>%
  summarise(pib_moyen = mean(gdpPercap)) %>%
  ggplot(aes(x = year, y = pib_moyen, color = continent)) +
  geom_line(size = 1.2) +
  labs(title = "√âvolution du PIB moyen par continent",
       x = "Ann√©e", y = "PIB par habitant moyen",
       color = "Continent")
```

:::

---

## üèÜ F√©licitations !

Vous avez termin√© tous les exercices ! Vous ma√Ætrisez maintenant :

- ‚úÖ La cr√©ation d'objets et vecteurs
- ‚úÖ L'exploration de datasets r√©els
- ‚úÖ Les fonctions statistiques de base
- ‚úÖ La manipulation de donn√©es avec dplyr
- ‚úÖ Les visualisations avec ggplot2
- ‚úÖ L'analyse de tendances temporelles

### üìö Pour aller plus loin

- Explorez d'autres datasets avec `data()`
- Essayez de nouveaux types de graphiques
- Apprenez √† importer vos propres donn√©es Excel/CSV
- D√©couvrez les analyses statistiques avanc√©es